<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.esp</groupId>
	<version>0.1.0</version>
	<artifactId>esp-client</artifactId>
	<packaging>war</packaging>
	<name>esp-client</name>
 
	<properties>
		<vaadin.version>7.1.8</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<geotools.version>10.4</geotools.version>
		<geotk.version>4.x-SNAPSHOT</geotk.version>
		<junit.version>4.11</junit.version>
		<version.mockito>1.9.5</version.mockito>
		<gwt.version>2.6.0</gwt.version>
		<gwt.plugin.version>${gwt.version}</gwt.plugin.version>
	</properties>

	<profiles>
		<profile>
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<production-mode>false</production-mode>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<production-mode>true</production-mode>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.2.4</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputDirectory>target/metamodel</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/metamodel</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- This creates a zip file of jar and sources jar. When publishing in 
				the Directory this makes sources available to maven users automatically. 
				We could also use this to package required dependecies for those poor developer 
				souls that still dont know how to use a build system that supports transient 
				dependencies... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>com.vaadin</groupId> <artifactId>vaadin-maven-plugin</artifactId> 
				<executions> <execution> <id>testwidgetset</id> <phase>test-compile</phase> 
				<goals> <goal>compile</goal> </goals> <configuration> <skip>${skipTests}</skip> 
				</configuration> </execution> </executions> </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>target/libs</outputDirectory>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>



			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<id>default-copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>META-INF</include>
                                    </includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Compile SCSS -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<classpathScope>compile</classpathScope>
							<mainClass>com.vaadin.sass.SassCompiler</mainClass>
							<arguments>
								<argument>src/main/webapp/VAADIN/themes/dashboard/styles.scss</argument>
								<argument>src/main/webapp/VAADIN/themes/dashboard/styles.css</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Compile widget set -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
					<noServer>true</noServer>
					<draftCompile>false</draftCompile>
					<style>PRETTY</style>
					<compileReport>true</compileReport>
					<runTarget>http://localhost:8080/</runTarget>
					<module>org.esp.publisher.ui.AppWidgetset</module>
				</configuration>
				<executions>
					<execution>
						<id>vaadin-compile-on-mvn-install</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<phase>compile</phase>
					</execution>
					<execution>
						<id>vaadin-clean-on-mvn-install</id>
						<goals>
							<goal>clean</goal>
						</goals>
						<phase>clean</phase>
					</execution>
					<execution>
						<id>vaadin-compile-theme</id>
						<goals>
							<goal>compile-theme</goal>
						</goals>
						<phase>clean</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>


		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<excludes>
							<!-- Files here might match to naming convetions, but the are just 
								vaadin apps containing you add-on components in varios setups. We can ignore 
								them from test. -->
							<exclude>**/demoandtestapp/*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.vaadin
										</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>
											[2.3.0-1,)
										</versionRange>
										<goals>
											<goal>
												compile
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.0.0,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>java</goal>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>


	<dependencies>
        <dependency>
            <groupId>it.geosolutions</groupId>
            <artifactId>geonetwork-manager</artifactId>
            <version>1.4-SNAPSHOT</version>
            <exclusions>
                <exclusion>  <!-- declare the exclusion here -->
                  <groupId>log4j</groupId>
                  <artifactId>log4j</artifactId>
                </exclusion>
              </exclusions> 
        </dependency>
        
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-coverage</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geotiff</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.geotools.jdbc</groupId>
			<artifactId>gt-jdbc-postgis</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.vaadin.addon</groupId>
			<artifactId>easyuploads</artifactId>
			<version>7.2.2</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.5</version>
		</dependency>


		<dependency>
			<groupId>com.sun.media</groupId>
			<artifactId>jai_imageio</artifactId>
			<version>1.2-pre-dr-b04</version>
		</dependency>

		<dependency>
			<groupId>it.geosolutions</groupId>
			<artifactId>geoserver-manager</artifactId>
			<version>1.7-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>v-jpa-form</artifactId>
			<version>0.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>4.3.0.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- Email -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${version.mockito}</version>
		</dependency>

	</dependencies>
	<repositories>
		<repository>
			<id>geo-solutions</id>
			<name>Geosolution</name>
			<url>http://maven.geo-solutions.it/</url>
		</repository>
		<repository>
			<id>OSGEO GeoTools repo</id>
			<url>http://download.osgeo.org/webdav/geotools</url>
		</repository>
		<repository>
			<id>www.dcm4che.org</id>
			<name>dcm4che Repository</name>
			<url>http://www.dcm4che.org/maven2</url>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<name>Vaadin Addons Repository</name>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

</project>
